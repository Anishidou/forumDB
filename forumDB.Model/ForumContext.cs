// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace forumDB.Model
{
    public partial class ForumContext : DbContext
    {
        public ForumContext()
        {
        }

        public ForumContext(DbContextOptions<ForumContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Curso> Curso { get; set; }
        public virtual DbSet<Pergunta> Pergunta { get; set; }
        public virtual DbSet<Resposta> Resposta { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=Gilberto\\SQLEXPRESS;Initial Catalog=Forum;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Curso>(entity =>
            {
                entity.Property(e => e.Nome).IsFixedLength();
            });

            modelBuilder.Entity<Pergunta>(entity =>
            {
                entity.HasOne(d => d.IdCursoNavigation)
                    .WithMany(p => p.Pergunta)
                    .HasForeignKey(d => d.IdCurso)
                    .HasConstraintName("FK__Pergunta__id_cur__571DF1D5");

                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.Pergunta)
                    .HasForeignKey(d => d.IdUsuario)
                    .HasConstraintName("FK__Pergunta__id_usu__5629CD9C");
            });

            modelBuilder.Entity<Resposta>(entity =>
            {
                entity.HasOne(d => d.IdPerguntaNavigation)
                    .WithMany(p => p.Resposta)
                    .HasForeignKey(d => d.IdPergunta)
                    .HasConstraintName("FK__Resposta__id_per__59FA5E80");

                entity.HasOne(d => d.IdUsuarioNavigation)
                    .WithMany(p => p.Resposta)
                    .HasForeignKey(d => d.IdUsuario)
                    .HasConstraintName("FK__Resposta__id_usu__5AEE82B9");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.Property(e => e.Nome).IsFixedLength();

                entity.HasOne(d => d.IdCursoNavigation)
                    .WithMany(p => p.Usuario)
                    .HasForeignKey(d => d.IdCurso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Usuario__id_curs__4BAC3F29");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}